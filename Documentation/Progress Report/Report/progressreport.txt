Smart Phone Cryptography: A comparison of
techniques for encrypted data communication
Progress Report
Tom Nicholls
November 24, 2012

In this progress report document, details will be given as to how this
project has evolved from the description presented in the project speciﬁcation, outlining and justifying any changes made. The state in which the
project is currently in will be shown, including a presentation of the work
completed up to this point. This will included any design and project choices
that have been made. The document will be ﬁnished with a timetabled plan
of how the project will continue over the next term, up to completion.

1

Project Alterations

Since the project speciﬁcation document, this project has undergone a few
changes in order to ensure that it is both an interesting project and also that
it includes suﬃcient original work and accomplishments to current areas of
Computer Science. This section details the adjustments made to the project.

1.1

The Problem Deﬁnition

The main alterations in this project can be best described through a statement of the new problem deﬁnition:
The privacy of sensitive information has always been an important issue. With the increased popularity and usability of smart phones, tasks
from accessing conﬁdential work ﬁles or personal bank accounts to communicating with clients and friends, are being completed through applications
over mobile, wireless internet connections.
In this project the various cryptographic schemes used by popular applications available to smart phones running the Android operating system for
secure data transmission and communication will be researched. Accompanying this research will be a study and comparison of other schemes which
could be used instead of those presented previously. A currently used cryptographic technique and an alternative technique will be implemented through
1

a data transmission application. Tests will be carried out to analyse various
important factors that need to be considered for a successful encrypted data
transmission application, such as mobile data usage or cryptanalytic methods required to break the data encryption. An original conclusion will then
be drawn as to whether the current techniques of cryptography available are
appropriate or if a new scheme should be encouraged. How this conclusion
can be extended to encompass functions other than text transmission will
then be presented, for instance secure secret sharing.
As can be seen, the project is now centered around the implementation
of currently used schemes and an alternative scheme. Tests will then be
used to provide a comparison between the schemes, with which a conclusion
over which scheme should be encouraged, can be obtained. The conclusion
will be original as no other external results have been found or considered.

1.2

Objectives

To further explain the adjustments made, the new objectives of the project
will be presented.
Main Objectives
1. Research
• Framework design
• Cryptographic Techniques
• Currently Available Applications
• Relevant factors that can be used to compare schemes implemented on a mobile device
2. Implementation
• Framework
– Design Data Communication framework
∗ Server
∗ Mobile Application
∗ P.C Client
– Build, test and document framework
• Encrypted Data Communication
– Design and implement cryptographic techniques, justifying
choices
– Test and document implementation
3. Analysis
2

• Perform tests from research
• Collect and present results
4. Conclusion
• Present and justify the ﬁndings and conlusions that can be made
form the completed tests
• Show possible adjustments to the implemented schemes which
would increase their usability
5. Further Work
• Detail possible extensions that can be made to the systems to
include other possible functions
6. Documentation
• Design documentation layout
• Complete and proof read full documentation
Secondary Objectives
1. Design, create and justify an industry acceptable and marketable user
interface for the ﬁnished product
2. Implement functionality described in the further work objective (Objective 5)
A further breakdown of the objectives can be found by looking at the
Gantt chart provided with this document.

1.3

Additional Changes

Aside from the adjustments made in the problem deﬁnition and objectives
sections detailed above, only minimal changes have been made to the rest of
the project speciﬁcation. For example in the ’Methods’ section the research
phase can still be completed in parallel to the framework development phase,
with all other objectives requiring the objective before it to be completed
before it can be started. Furthermore, only minor changes been made to
the ’Resources’ section; a re-wording of the project components to account
for the changes mentioned above and the addition of the Google application
market place ’Google Play’ to the list of resources. This is available through
the internet, which I have full access to.
A ﬁnal addition to the speciﬁcation that should be noted is the inclusion
of another legal issue surrounding the project. The resulting product of this
project facilitates the secure and secret communication of messages which,
3

in the wrong hands, could be used to aid a number of illegal operations
such as crime organisation or terrorism. To avoid this issue in a legal sense
I will not publish the ﬁnal application to the Google market place and I
will also present a legal disclaimer attached to this product incase someone
does obtain a copy of the application. The issue could also be viewed as an
ethical issue, but the actions taken to escape the legal issue should ensure
the avoidence of the issue viewed in an ethical sense.

2

Work Completed

In this section the work that has been completed in this project so far will
be presented.

2.1

Research

In this project, the ﬁrst task was to perform research (see Objectives section).
An overview of the results of the research performed is described below. The
results of this research will be formally presented and described in more
detail in the ﬁnal project report.
1. Framework Design
Research was made into how a system could be set up to facilitate the
communication of data messages between any two users of the system.
Socket-based communication will allow networking between a central
java based server and P.C client, whereas HTTP Post and broadcastreceiver methods will be used to allow the Android application to
transfer and receive data from the server. The result of this research,
to utilise a multi-client server, can be found in the design section,
where an outline of the system to be created is given.
2. Cryptographic Methods The three cryptographic methods that have
been researched are AES, RSA and ECC. The schemes will be
outlined here, with an indepth analysis and description presented
in the project report.
• AES
AES is a symmetric-key algorithm in which the same cryptographic key is used for both encryption and decryption.
The AES scheme takes a block of plaintext and the key as
inputs and applies several rounds of transformations to produce the ciphertext block. Decryption is done by reversing
the process.
• RSA
RSA is an example of an asymmetric key algorithm, in which
a public key and a private key are utilised. The public key
4

is shared and known with everyone and used in the encryption process. The messages encrypted with the public key
can only be decrypted using the matching private key. The
RSA algorithm is based upon the diﬃculty of factoring large
integers, with encryption and decryption of the form
C = M e mod(n)
M = C d mod(n) = (M e )d mod(n) = M ed mod(n)
where M is the plaintext message and C is the ciphertext.
• ECC
ECC is another approach to public-key cryptography (asymmetric key algorithm) but is based on the algebraic structure
of elliptic curves over ﬁnite ﬁelds. The assumption that ﬁnding the discrete logarithm of a random elliptic curve element,
with respect to a publicly known base point, is infeasible is
the basis for the elliptic curve cryptographic scheme.
3. Current Applications
As a result of searching on the Google application marketplace ‘Google
Play’, only two diﬀerent applications currently exist that perform encrypted message communication. These two applications are:
• RSA Cipher Cat by Miasoft
• Cloak SMS Free by Hamish Medlin
Both applications allow the communication of encrypted messages between two users of the application. RSA Cipher Cat utilises the RSA
asymmetric encryption scheme whereas Cloak SMS Free is uses the
AES symmetric key encryption scheme.
4. Mobile device application comparison factors
As the third section of this project is concerned with the analysis
and comparison of cryptographic schemes, research was performed to
discover which factors impact how successful and useful an encryption
scheme on a mobile device is. The discovered factors are:
• Diﬃculty of techniques required to break encryption
• Energy Consumption/Battery power required
• Operation and Processing Time
• Cryptographic key size
• Mobile data usage
• Application size
• Number/Duration of data connection required
5

2.2

Design

As can be seen from the previous sections in this document, this project
includes a software development section. The system is built upon a multiclient server facilitating the communication of data between two clients. This
data is encrypted (and decrypted) using diﬀerent cryptographic schemes.

Figure 1: The server can create many communication sessions from a collection of clients
The server creates a session between two clients that wish to communicate. Clients initiate sessions with any other client with which they have
shared their indentiﬁcation code (ID number). Each session is a new thread
within the server. This allows the server to establish any number of sessions,
to allow for multiple communication links between any two clients. As can
be seen in Figure 1, any client can have more than one communication session at any one time, with any other client in the client base.

Figure 2: Basic inheritance hierarchy of the clients
The client class contains the methods which allow it to connect to the
server and send data to another client in the client base through the server.
The P.C client and Android application inherits these abilities from the
client but are more speciﬁc, so are implemented according to its own rules
(e.g sockets or HTTP methods). Hence, a P.C client can send a message (unencrypted), via the server, to another P.C client or an application. This can
also be achieved by an application client. Compatibility between the clients
will be ensured through the use of the XML ﬁle structure. P.C client 1 (and
2) are more speciﬁc versions of the P.C client class. P.C client 1 has all the
capabilities of the P.C client, with an added encryption method. Similarly
6

for P.C client 2, but a diﬀerent encryption scheme will be implemented. For
example, if two cryptographic schemes are implemented; Application 1 and
P.C client 1 will utilise scheme 1 and Application 2 and P.C client 2 will
utilise scheme 2.

Figure 3: Sequence diagram showing distribution of public keys
The encryption schemes used within this project all require the sharing
of public keys. Figure 3 shows how this will be achieved. The placeholder
names ‘Alice’, ‘Bob’ and ‘Trent’ have been used following the tradition set
out in most cryptography materials.
1. Alice registers her public key KA with Trent
2. Trent sends his public key KT to Alice
3. Bob registers his public key KB with Trent
4. Trent sends his public key KT to Bob
5. Alice sends to Trent: Alice, Bob, T imestamp1
−1
6. Trent sends to Alice: {KB , Bob, T imestamp1}KT

7. Alice checks Trent’s signature on “KB , Bob” and the timestamp, creates her nonce NA at random and sends to Bob: {NA , Alice}KB
8. Bob decrypts the message, checks Alice’s ID and sends to Trent:
Bob, Alice, T imestamp2
7

−1
9. Trent sends to Bob: {KA , Alice, T imestamp1}KT

10. Bob checks Trent’s signature on “KA , Alice” and the timestamp, creates his nonce NB at random and sends it to Alice: {NA , NB , Bob}KA
11. Alice decrypts and sends to Bob {NB }KB
(Steps 7, 10 and 11 passed through server and directed straight to client)
−1
Note: {M }Kx represents the encryption of message M with the private
key of client x, whilst {M }Kx represents the encryption of message M with
the public key of x.
Once this protocol has been completed, each client has the other client’s
public key and the communication of encrypted data can commence. Steps
1 to 4 registers the public keys of the clients with the server, which are
only required when a connection is made between two clients that are new
to the system or have not yet made a connection to the server. Therefore,
these steps will not be required for each new session initialisation. However,
for various reasons, a user may wish to generate a new key-pair, which will
need to be registered with the server and hence the protocol completed in
full when they wish to set up a session with another client. This feature will
be fully implemented and available in the ﬁnal product.

3

Project Management

As described in the project speciﬁcation, various methods will be adopted to
ensure that the project ﬁles (code, documentation etc) are constantly backed
up and that version control is maintained. The free services of Dropbox and
Git/Github have been set up and can be accessed from any computer or
workstation that is used in this project, allowing a constant back up. These
services allow a constant back up of data to an online server which will
be initiated periodically. In addition to this an external ﬂash drive has
been dedicated to the task of providing a back up of data, as well as the
Department of Computer Science machines. Bash scripts have been writen
to make the back up of data to these services less time consuming.
For documentation, the document preparation system LaTeX will be
used. This is because LaTeX allows the inclusion of mathematics into a
document in a simple and easy to use way with high typographical quality,
which will be extremely beneﬁcial in this project.
As for the software development section of this project the technique of
test driven development in a plan-driven setting will be employed. Plandriven development is clearly the best choice due to the nature of this
project. The other option, agile development, is best suited for a project
with a dedicated customer, such that constant communication can be maintained. It also encourages the constant evolution of a system due to changing
8

ideas or speciﬁcations and restricts the amount of documentation created.
Plan-driven development, on the other hand, has a set plan for development
which it follows to produce the end product and a ﬁrm set of documentation.
Test-driven development combines testing and development. Code is
developed incrementally, along with a set of tests for that increment. The
next increment is not started until the previous increment is fully tested
and completed. In the context of this project, the implementation of the
cryptographic schemes will not be started until the multi-client server is set
up and can transfer data, for example.

4

Project Continuation Plan

A timetable showing the completion dates of main events and milestones in
this project, starting from the hand in date of this document, is presented
below.
Date
Monday Week 9 - Term 1
Week 10 - Term 1
Christmas Break - Week 1
Christmas Break - Week 2
Christmas Break - Week 3
Christmas Break - Week 4
Week 1 - Term 2
Week 2 - Term 2
Week 3 - Term 2
Week 4 - Term 2
Week 5 - Term 2
Week 6 - Term 2
Week 7 - Term 2
Week 8 - Term 2
Week 9 - Term 2
Week 10 - Term 2
Week 9 and Week 10 - Term 2
Easter Break - Week 1
Easter Break - Week 2
Easter Break - Week 3
Easter Break - Week 4
Easter Break - Week 5
Thursday Week 1 - Term 3

Task
Submit Progress Report
Server Implementation completed
P.C Client completed
Android Application completed
Complete framework ﬁnished

Implementation ﬁnished
Analysis completed
Conclusion completed
Further work ﬁnished
Presentation ﬁnished
Project Presentations

Project Report ﬁnished
Submit Project Report

Table 1: Timetable of completion dates of main objectives

9

